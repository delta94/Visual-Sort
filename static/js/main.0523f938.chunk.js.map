{"version":3,"sources":["components/Header/index.tsx","components/Footer/index.tsx","components/AlgoChart/index.tsx","components/Dashboard/Algos.tsx","components/Dashboard/index.tsx","components/App/index.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","flex","display","alignItems","icon","responsiveText","fontSize","Header","classes","AppBar","position","Container","Toolbar","Typography","variant","className","Face","footer","bottom","width","backgroundColor","height","zIndex","color","padding","boxSizing","fontFamily","icons","fill","justifyContent","Footer","IconButton","onClick","url","window","open","xmlns","viewBox","d","BAR_COLOR","COMPARE_COLOR","stepTime","pause","AlgoChart","props","analyticChartRef","useRef","useState","chart","setChart","chartData","setChartData","actionBuffer","setActionBuffer","useEffect","myChartRef","current","getContext","sortingData","startingArray","sortingLabels","barColors","forEach","push","tempChart","Chart","type","data","labels","datasets","label","lineTension","borderColor","options","responsive","legend","scales","yAxes","ticks","beginAtZero","clear","consumeActionBuffer","arr","buffer","colors","temp","i","j","length","shift","stepBuffer","dataArr","a","result","update","Promise","setTimeout","console","log","id","ref","tempBuffer","swap","lessThan","bubbleSort","len","end","dataSet","selectionSort","minIdx","insertionSort","mainContainer","paddingTop","Dashboard","setStartingArray","setStepTime","setPause","chartKey","setChartKey","arrLength","sortingArray","setSortingArray","randomizeArray","Math","ceil","random","undefined","sort","sortingAlgo","key","Button","Slider","defaultValue","aria-labelledby","valueLabelDisplay","step","marks","min","max","onChange","e","v","createMuiTheme","overrides","MuiTooltip","tooltip","MuiSnackbarContent","MuiAppBar","colorPrimary","palette","primary","main","secondary","typography","fontWeightLight","fontWeightRegular","fontWeightMedium","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.0523f938.chunk.js","sourcesContent":["import React from 'react';\nimport { AppBar, Toolbar, Typography, makeStyles, Container } from '@material-ui/core';\nimport { Face } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  flex: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  icon: {\n    marginRight: '0.3em'\n  },\n  responsiveText: {\n    fontSize: '14px'\n  }\n}));\n\nexport default function Header() {\n  const classes = useStyles({});\n\n  return (\n    <AppBar position=\"sticky\">\n      <Container>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title + ' ' + classes.flex + ' ' + classes.responsiveText}>\n            <Face className={classes.icon} /> Doctor Sort\n          </Typography>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n}\n","import React from 'react';\nimport { makeStyles, IconButton, Container } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  footer: {\n    position: 'fixed',\n    bottom: '0px',\n    width: '100%',\n    backgroundColor: '#2b2e4a',\n    height: '64px',\n    zIndex: 1000,\n    color: '#FEFEFE',\n    padding: '0.5em',\n    boxSizing: 'border-box',\n    fontFamily: 'Roboto'\n  },\n  icons: {\n    fill: '#eeeeee'\n  },\n  flex: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  }\n}));\n\nexport default function Footer() {\n  const classes = useStyles({});\n\n  const handleLink = (url: string) => {\n    window.open(url, '_blank');\n  };\n\n  return (\n    <footer className={classes.footer}>\n      <Container className={classes.flex}>\n        <div>Visual Sort - 2019</div>\n        <div>\n          <IconButton title=\"Github Button\" onClick={() => handleLink('https://github.com/ericellb/Visual-Sort')}>\n            <svg\n              className={classes.icons}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\" />\n            </svg>\n          </IconButton>\n        </div>\n      </Container>\n    </footer>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport Chart from 'chart.js';\r\n\r\nexport type ActionBuffer = {\r\n  type: 'swap' | 'compare';\r\n  i: number;\r\n  j: number;\r\n};\r\n\r\ninterface AlgoChartProps {\r\n  startingArray: number[];\r\n  actionBuffer: ActionBuffer[] | undefined;\r\n  stepTime: number;\r\n  pause: boolean;\r\n}\r\n\r\n// Colors for bar chart\r\nconst BAR_COLOR = '#7289da';\r\nconst COMPARE_COLOR = 'green';\r\nlet stepTime = 400;\r\nlet pause = false;\r\n\r\nexport default function AlgoChart(props: AlgoChartProps) {\r\n  const analyticChartRef = useRef<HTMLCanvasElement>(null);\r\n  const [chart, setChart] = useState<Chart>();\r\n  const [chartData, setChartData] = useState<number[]>();\r\n  const [actionBuffer, setActionBuffer] = useState<ActionBuffer[]>();\r\n\r\n  // Component did mount, mount the Chart onto canvas\r\n  useEffect(() => {\r\n    // Setup the Chart\r\n    let myChartRef;\r\n    if (analyticChartRef.current) {\r\n      myChartRef = analyticChartRef.current.getContext('2d');\r\n    }\r\n\r\n    // Labels and Data\r\n    let sortingData = props.startingArray;\r\n    let sortingLabels: string[] = [];\r\n    let barColors: string[] = [];\r\n    sortingData.forEach(() => {\r\n      sortingLabels.push('');\r\n      barColors.push(BAR_COLOR);\r\n    });\r\n\r\n    // Create our chart\r\n    let tempChart = new Chart(myChartRef as any, {\r\n      type: 'bar',\r\n      data: {\r\n        //Bring in data\r\n        labels: sortingLabels,\r\n        datasets: [\r\n          {\r\n            label: 'Value',\r\n            data: sortingData,\r\n            fill: false,\r\n            lineTension: 0,\r\n            borderColor: '#0b1736',\r\n            backgroundColor: barColors\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        //Customize chart options\r\n        responsive: true,\r\n        legend: {\r\n          display: false\r\n        },\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                beginAtZero: true\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    });\r\n\r\n    setChart(tempChart);\r\n\r\n    // When dismounting destroy char\r\n    return () => {\r\n      if (chart) {\r\n        chart.clear();\r\n      }\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // Comsumes the action buffer, and comapres / swaps elements\r\n  const consumeActionBuffer = (arr: number[], actionBuffer: ActionBuffer[]) => {\r\n    const buffer = actionBuffer[0];\r\n    let colors: string[] = [];\r\n    arr.forEach(() => {\r\n      colors.push(BAR_COLOR);\r\n    });\r\n    if (buffer.type === 'swap') {\r\n      let temp = arr[buffer.i];\r\n      arr[buffer.i] = arr[buffer.j];\r\n      arr[buffer.j] = temp;\r\n    } else if (actionBuffer[0].type === 'compare' && actionBuffer.length > 1) {\r\n      colors[buffer.i] = COMPARE_COLOR;\r\n      colors[buffer.j] = COMPARE_COLOR;\r\n    }\r\n\r\n    // Remove action from buffer\r\n    actionBuffer.shift();\r\n    return { arr: arr, colors: colors };\r\n  };\r\n\r\n  // Steps through the buffer actions\r\n  let stepBuffer = async (dataArr: number[], actionBuffer: ActionBuffer[]) => {\r\n    if (chart && !pause) {\r\n      // Use our action buffer to sort the temp array in slow time\r\n      let result = consumeActionBuffer(dataArr, actionBuffer);\r\n      // If we have a dataset, update it\r\n      if (chart.data.datasets) {\r\n        chart.data.datasets[0].data = result.arr;\r\n        chart.data.datasets[0].backgroundColor = result.colors;\r\n      }\r\n      chart.update();\r\n\r\n      // If buffer contains actions, do them till were empty!\r\n      if (actionBuffer.length > 0) {\r\n        await new Promise(() => {\r\n          setTimeout(() => stepBuffer(dataArr, actionBuffer), stepTime);\r\n        });\r\n      }\r\n    } else {\r\n      await new Promise(() => {\r\n        setTimeout(() => stepBuffer(dataArr, actionBuffer), 1000);\r\n      });\r\n    }\r\n  };\r\n\r\n  // When action buffer changes, animate the sorting sequence\r\n  useEffect(() => {\r\n    if (actionBuffer && chartData) {\r\n      stepBuffer(chartData, actionBuffer);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [actionBuffer]);\r\n\r\n  // Resets data if sorting array changes\r\n  useEffect(() => {\r\n    setActionBuffer(props.actionBuffer);\r\n    setChartData(props.startingArray);\r\n    pause = false;\r\n    // eslint-disable-next-line\r\n  }, [props.startingArray, props.actionBuffer]);\r\n\r\n  // Changes step time\r\n  useEffect(() => {\r\n    stepTime = props.stepTime;\r\n  }, [props.stepTime]);\r\n\r\n  // Changes pausing of animation\r\n  useEffect(() => {\r\n    pause = props.pause;\r\n    console.log(pause);\r\n  }, [props.pause]);\r\n\r\n  return (\r\n    <div>\r\n      <canvas id=\"analyticChart\" ref={analyticChartRef} />\r\n    </div>\r\n  );\r\n}\r\n","import { ActionBuffer } from '../AlgoChart';\r\n\r\n// Custom type\r\nexport type SortingAlgorithms = (\r\n  arr: number[]\r\n) => {\r\n  dataSet: number[];\r\n  actionBuffer: ActionBuffer[];\r\n};\r\n\r\nlet tempBuffer: ActionBuffer[] = [];\r\n\r\n// Swap method!\r\nconst swap = (arr: number[], i: number, j: number) => {\r\n  tempBuffer.push({ type: 'swap', i: i, j: j });\r\n  let temp = arr[i];\r\n  arr[i] = arr[j];\r\n  arr[j] = temp;\r\n};\r\n\r\n// Compares two numbers\r\nconst lessThan = (arr: number[], i: number, j: number) => {\r\n  tempBuffer.push({ type: 'compare', i: i, j: j });\r\n  return arr[i] - arr[j] > 0;\r\n};\r\n\r\n// Bubble sorts\r\nexport const bubbleSort = (arr: number[]) => {\r\n  tempBuffer = [];\r\n  let len = arr.length;\r\n\r\n  for (let i = 0; i < len; i++) {\r\n    for (let j = 0, end = len - i; j < end; j++) {\r\n      if (lessThan(arr, j, j + 1)) {\r\n        swap(arr, j, j + 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  return { dataSet: arr, actionBuffer: tempBuffer };\r\n};\r\n\r\n// Selection sort!\r\nexport const selectionSort = (arr: number[]) => {\r\n  tempBuffer = [];\r\n  let len = arr.length;\r\n\r\n  for (let i = 0; i < len - 1; i++) {\r\n    let minIdx = i;\r\n    for (let j = i + 1; j < len; j++) {\r\n      if (lessThan(arr, minIdx, j)) {\r\n        minIdx = j;\r\n      }\r\n    }\r\n    swap(arr, minIdx, i);\r\n  }\r\n\r\n  return { dataSet: arr, actionBuffer: tempBuffer };\r\n};\r\n\r\n// Insertion Sort!\r\nexport const insertionSort = (arr: number[]) => {\r\n  tempBuffer = [];\r\n  let len = arr.length;\r\n\r\n  for (let i = 1; i < len; i++) {\r\n    for (let j = i; j > 0 && lessThan(arr, j - 1, j); j--) {\r\n      swap(arr, j - 1, j);\r\n    }\r\n  }\r\n\r\n  return { dataSet: arr, actionBuffer: tempBuffer };\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, Button, Slider, makeStyles } from '@material-ui/core';\r\nimport AlgoChart, { ActionBuffer } from '../AlgoChart';\r\nimport { selectionSort, bubbleSort, SortingAlgorithms, insertionSort } from './Algos';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  mainContainer: {\r\n    height: 'calc(100% - 128px)',\r\n    paddingTop: '6em',\r\n    padding: '3em',\r\n    boxSizing: 'border-box'\r\n  }\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles({});\r\n  // State for AlgoChart Props\r\n  const [startingArray, setStartingArray] = useState();\r\n  const [actionBuffer, setActionBuffer] = useState<ActionBuffer[] | undefined>();\r\n  const [stepTime, setStepTime] = useState(600);\r\n  const [pause, setPause] = useState(false);\r\n\r\n  // Key to remove chart from dom\r\n  const [chartKey, setChartKey] = useState(0);\r\n\r\n  // State to control size of Array and Algo used\r\n  const [arrLength, setArrLength] = useState(10);\r\n  const [selectedAlgo, setSelectedAlgo] = useState(() => bubbleSort);\r\n  const [sortingArray, setSortingArray] = useState<number[]>();\r\n\r\n  // Randomizes the values in array\r\n  const randomizeArray = () => {\r\n    let arr = [];\r\n    for (let i = 0; i < arrLength; i++) {\r\n      arr.push(Math.ceil(Math.random() * 10));\r\n    }\r\n    setSortingArray([...arr]);\r\n    setStartingArray([...arr]);\r\n    setActionBuffer(undefined);\r\n    setChartKey(chartKey + 1);\r\n  };\r\n\r\n  // Calls Selected Sorting Algo, with Sorting Arary\r\n  const sort = (sortingAlgo: SortingAlgorithms) => {\r\n    if (sortingArray) {\r\n      let result = sortingAlgo([...sortingArray]);\r\n      setSortingArray(startingArray);\r\n      setActionBuffer(result.actionBuffer);\r\n    }\r\n  };\r\n\r\n  // Start sorting on mount\r\n  useEffect(() => {\r\n    randomizeArray();\r\n  }, []);\r\n\r\n  return (\r\n    <Container className={classes.mainContainer}>\r\n      <div>\r\n        {startingArray && (\r\n          <AlgoChart\r\n            key={chartKey}\r\n            startingArray={startingArray}\r\n            actionBuffer={actionBuffer}\r\n            stepTime={stepTime}\r\n            pause={pause}\r\n          />\r\n        )}\r\n        <Button onClick={() => randomizeArray()} color={'primary'}>\r\n          Randomize Values\r\n        </Button>\r\n        <Button color={'primary'} onClick={() => sort(bubbleSort)}>\r\n          Bubble Sort\r\n        </Button>\r\n        <Button color={'primary'} onClick={() => sort(selectionSort)}>\r\n          Selection Sort\r\n        </Button>\r\n        <Button color={'primary'} onClick={() => sort(insertionSort)}>\r\n          Insertion Sort\r\n        </Button>\r\n        <Button color={'primary'} onClick={() => setPause(!pause)}>\r\n          Pause / Play\r\n        </Button>\r\n        <Slider\r\n          defaultValue={stepTime}\r\n          aria-labelledby=\"discrete-slider\"\r\n          valueLabelDisplay=\"auto\"\r\n          step={100}\r\n          marks\r\n          min={100}\r\n          max={1000}\r\n          onChange={(e, v) => {\r\n            if (typeof v === 'number') setStepTime(v);\r\n          }}\r\n        />\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\nimport Header from '../Header';\nimport Footer from '../Footer';\nimport Dashboard from '../Dashboard';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport './style.css';\n\nexport default function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Header />\n      <Dashboard />\n      <Footer />\n    </ThemeProvider>\n  );\n}\n\nexport const theme = createMuiTheme({\n  overrides: {\n    MuiTooltip: {\n      tooltip: {\n        fontSize: '14px',\n        backgroundColor: 'black'\n      }\n    },\n    MuiSnackbarContent: {\n      root: {\n        backgroundColor: '#2a5bd7',\n        color: 'white',\n        fontFamily: 'Roboto'\n      }\n    },\n    MuiAppBar: {\n      colorPrimary: {\n        backgroundColor: '#2b2e4a'\n      }\n    }\n  },\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#7289da'\n    },\n    secondary: {\n      main: '#3ca374'\n    }\n  },\n  typography: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontSize: 14,\n    fontWeightLight: 400,\n    fontWeightRegular: 500,\n    fontWeightMedium: 600\n  }\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}