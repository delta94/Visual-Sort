{"version":3,"sources":["components/Header/index.tsx","components/Footer/index.tsx","components/AlgoChart/index.tsx","components/Dashboard/index.tsx","components/App/index.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","flex","display","alignItems","icon","responsiveText","fontSize","Header","classes","AppBar","position","Container","Toolbar","Typography","variant","className","Face","footer","bottom","width","backgroundColor","height","zIndex","color","padding","boxSizing","fontFamily","icons","fill","justifyContent","Footer","IconButton","onClick","url","window","open","xmlns","viewBox","d","chartContainer","BAR_COLOR","AlgoChart","props","analyticChartRef","useRef","useState","chart","setChart","sortingArray","chartData","useEffect","myChartRef","current","getContext","sortingData","sortingLabels","barColors","forEach","push","tempChart","Chart","type","data","labels","datasets","label","lineTension","borderColor","options","responsive","legend","scales","yAxes","ticks","beginAtZero","consumeActionBuffer","arr","actionBuffer","buffer","colors","temp","i","j","length","shift","stepBuffer","dataArr","a","result","update","Promise","setTimeout","id","ref","Dashboard","tempBuffer","setActionBuffer","swap","lessThan","changeData","stop","len","bubbleSort","createMuiTheme","overrides","MuiTooltip","tooltip","MuiSnackbarContent","MuiAppBar","colorPrimary","palette","primary","main","secondary","typography","fontWeightLight","fontWeightRegular","fontWeightMedium","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.dda6b2ba.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { AppBar, Toolbar, Typography, Button, makeStyles, Container } from '@material-ui/core';\nimport { Face } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  flex: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  icon: {\n    marginRight: '0.3em'\n  },\n  responsiveText: {\n    fontSize: '14px'\n  }\n}));\n\nexport default function Header() {\n  const classes = useStyles({});\n\n  return (\n    <AppBar position=\"sticky\">\n      <Container>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title + ' ' + classes.flex + ' ' + classes.responsiveText}>\n            <Face className={classes.icon} /> Doctor Sort\n          </Typography>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n}\n","import React from 'react';\nimport { makeStyles, IconButton, Container } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  footer: {\n    position: 'fixed',\n    bottom: '0px',\n    width: '100%',\n    backgroundColor: '#2b2e4a',\n    height: '64px',\n    zIndex: 1000,\n    color: '#FEFEFE',\n    padding: '0.5em',\n    boxSizing: 'border-box',\n    fontFamily: 'Roboto'\n  },\n  icons: {\n    fill: '#eeeeee'\n  },\n  flex: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  }\n}));\n\nexport default function Footer() {\n  const classes = useStyles({});\n\n  const handleLink = (url: string) => {\n    window.open(url, '_blank');\n  };\n\n  return (\n    <footer className={classes.footer}>\n      <Container className={classes.flex}>\n        <div>Lightning Link - 2019</div>\n        <div>\n          <IconButton title=\"Github Button\" onClick={() => handleLink('https://github.com/ericellb/Lightning-Link')}>\n            <svg\n              className={classes.icons}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\" />\n            </svg>\n          </IconButton>\n        </div>\n      </Container>\n    </footer>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Chart from 'chart.js';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  chartContainer: {\r\n    display: 'flex'\r\n  }\r\n}));\r\n\r\nexport type ActionBuffer = {\r\n  type: 'swap' | 'compare';\r\n  i: number;\r\n  j: number;\r\n};\r\n\r\ninterface AlgoChartProps {\r\n  sortingArray: number[];\r\n  actionBuffer: ActionBuffer[];\r\n}\r\n\r\n// Colors for bar chart\r\nconst BAR_COLOR = '#55bae7';\r\n\r\nexport default function AlgoChart(props: AlgoChartProps) {\r\n  const classes = useStyles({});\r\n  const analyticChartRef = useRef<HTMLCanvasElement>(null);\r\n  const [chart, setChart] = useState<Chart>();\r\n  const [chartData, setChartData] = useState([...props.sortingArray]);\r\n\r\n  // Component did mount, mount the Chart onto canvas\r\n  useEffect(() => {\r\n    // Setup the Chart\r\n    let myChartRef;\r\n    if (analyticChartRef.current) {\r\n      myChartRef = analyticChartRef.current.getContext('2d');\r\n    }\r\n\r\n    // Labels and Data\r\n    let sortingData = chartData;\r\n    let sortingLabels: string[] = [];\r\n    let barColors: string[] = [];\r\n    sortingData.forEach(() => {\r\n      sortingLabels.push('');\r\n      barColors.push(BAR_COLOR);\r\n    });\r\n\r\n    // Create our chart\r\n    let tempChart = new Chart(myChartRef as any, {\r\n      type: 'bar',\r\n      data: {\r\n        //Bring in data\r\n        labels: sortingLabels,\r\n        datasets: [\r\n          {\r\n            label: 'Value',\r\n            data: sortingData,\r\n            fill: false,\r\n            lineTension: 0,\r\n            borderColor: '#0b1736',\r\n            backgroundColor: barColors\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        //Customize chart options\r\n        responsive: true,\r\n        legend: {\r\n          display: false\r\n        },\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                beginAtZero: true\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    });\r\n\r\n    setChart(tempChart);\r\n  }, []);\r\n\r\n  // Comsumes the action buffer, and comapres / swaps elements\r\n  const consumeActionBuffer = (arr: number[], actionBuffer: ActionBuffer[]) => {\r\n    const buffer = actionBuffer[0];\r\n    let colors: string[] = [];\r\n    arr.forEach(() => {\r\n      colors.push(BAR_COLOR);\r\n    });\r\n    if (buffer.type === 'swap') {\r\n      let temp = arr[buffer.i];\r\n      arr[buffer.i] = arr[buffer.j];\r\n      arr[buffer.j] = temp;\r\n    } else if (actionBuffer[0].type === 'compare' && actionBuffer.length > 1) {\r\n      colors[buffer.i] = 'green';\r\n      colors[buffer.j] = 'green';\r\n    }\r\n\r\n    // Remove action from buffer\r\n    actionBuffer.shift();\r\n    return { arr: arr, colors: colors };\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Steps through the buffer actions\r\n    const stepBuffer = async (dataArr: number[], actionBuffer: ActionBuffer[]) => {\r\n      if (chart) {\r\n        // Use our action buffer to sort the temp array in slow time\r\n        let result = consumeActionBuffer(dataArr, actionBuffer);\r\n        // If we have a dataset, update it\r\n        if (chart.data.datasets) {\r\n          chart.data.datasets[0].data = result.arr;\r\n          chart.data.datasets[0].backgroundColor = result.colors;\r\n        }\r\n        chart.update();\r\n      }\r\n\r\n      // If buffer contains actions, do them till were empty!\r\n      if (actionBuffer.length > 0) {\r\n        await new Promise(() => {\r\n          setTimeout(() => stepBuffer(dataArr, actionBuffer), 300);\r\n        });\r\n      }\r\n    };\r\n\r\n    // Start the set buffer\r\n    stepBuffer(chartData, props.actionBuffer);\r\n  }, [props.actionBuffer]);\r\n\r\n  return (\r\n    <div className={classes.chartContainer}>\r\n      <canvas id=\"analyticChart\" ref={analyticChartRef} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport AlgoChart, { ActionBuffer } from '../AlgoChart';\r\n\r\nexport default function Dashboard() {\r\n  let tempBuffer: ActionBuffer[] = [];\r\n  const [sortingArray, setSortingArray] = useState([1, 5, 8, 9, 2, 3, 6, 8, 3, 6]);\r\n  const [actionBuffer, setActionBuffer] = useState<ActionBuffer[]>([]);\r\n\r\n  // Swap method!\r\n  const swap = (arr: number[], i: number, j: number) => {\r\n    tempBuffer.push({ type: 'swap', i: i, j: j });\r\n    let temp = arr[i];\r\n    arr[i] = arr[j];\r\n    arr[j] = temp;\r\n  };\r\n\r\n  // Compares two numbers\r\n  const lessThan = (arr: number[], i: number, j: number) => {\r\n    tempBuffer.push({ type: 'compare', i: i, j: j });\r\n    return arr[i] - arr[j] > 0;\r\n  };\r\n\r\n  // Bubble sorts!\r\n  const bubbleSort = (arr: number[]) => {\r\n    let len = arr.length;\r\n    let i: number;\r\n    let j: number;\r\n    let stop: number;\r\n\r\n    for (i = 0; i < len; i++) {\r\n      for (j = 0, stop = len - i; j < stop; j++) {\r\n        if (lessThan(arr, j, j + 1)) {\r\n          swap(arr, j, j + 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    return arr;\r\n  };\r\n\r\n  const changeData = () => {\r\n    bubbleSort(sortingArray);\r\n    setActionBuffer(tempBuffer);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      changeData();\r\n    }, 1000);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <AlgoChart sortingArray={sortingArray} actionBuffer={actionBuffer} />\r\n      Dashbord for sorting\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\nimport Header from '../Header';\nimport Footer from '../Footer';\nimport Dashboard from '../Dashboard';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport './style.css';\n\nexport default function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Header />\n      <Dashboard />\n      <Footer />\n    </ThemeProvider>\n  );\n}\n\nexport const theme = createMuiTheme({\n  overrides: {\n    MuiTooltip: {\n      tooltip: {\n        fontSize: '14px',\n        backgroundColor: 'black'\n      }\n    },\n    MuiSnackbarContent: {\n      root: {\n        backgroundColor: '#2a5bd7',\n        color: 'white',\n        fontFamily: 'Roboto'\n      }\n    },\n    MuiAppBar: {\n      colorPrimary: {\n        backgroundColor: '#2b2e4a'\n      }\n    }\n  },\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#7289da'\n    },\n    secondary: {\n      main: '#3ca374'\n    }\n  },\n  typography: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontSize: 14,\n    fontWeightLight: 400,\n    fontWeightRegular: 500,\n    fontWeightMedium: 600\n  }\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}